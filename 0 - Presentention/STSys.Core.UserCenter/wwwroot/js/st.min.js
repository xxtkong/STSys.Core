//1.单项操作-----------------------------------------------start
function Delete(url, data, confirm) {
    if (confirm) {
        lay.confirm("确定要删除", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};
function Reset(url, data, confirm) {
    if (confirm) {
        lay.confirm("确定要重置", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};

function Disable(url, data, confirm) {
    if (confirm) {
        lay.confirm("确定要禁用", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};
function Enabled(url, data, confirm) {
    if (confirm) {
        lay.confirm("确定要启用", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};

function Upload(url, data, confirm) {
    if (confirm) {
        lay.confirm("您确定上传文件", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};
function Download(url, data, confirm) {
    if (confirm) {
        lay.confirm("您确定下载文件", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};

function Import(url, data, confirm) {
    if (confirm) {
        lay.confirm("您确定导入文件", null, lay.icon.why, function () {
            ajaxpost(url, data);
        });
    } else {
        ajaxpost(url, data);
    }
};
function Export(url, data, confirm) {
    for (var key in data) {
        if (url.indexOf("?") == -1) {
            url += "?";
        } else {
            url += "&";
        }
        url += key + "=" + data[key]; //获取key值  获取对应的value值 
    }
    if (confirm) {
        lay.confirm("您确定导出文件", null, lay.icon.why, function () {
            window.location.href = url;
            //ajaxpost(url, data, "text");
        });
    } else {
        window.location.href = url;
        // ajaxpost(url, data, "text");
    }
};

//1.单项操作-----------------------------------------------end

//2.批量操作项-----------------------------------------------start
//添加
function Adds(url, title) {
    if (title == null || title == "undefined" || title == "") {
        title = "请输入生成条数";
    }
    var a = new Array();
    $("input[name='chk']").closest(".table").find('tbody > tr > td:first-child input:checkbox').each(function () {
        var that = $(this); if (that.is(":checked")) { a.push(that.attr("value")); }
    });
    if (a.length == 0) {
        lay.msg("请先选择数据项");
        return;
    }
    lay.prompt(title + "：", function (value, index, elem) {
        if ($.isNumber(value)) {
            ajaxpost(url, { ids: a.toString(), num: value });
            lay.close(index);
        } else {
            lay.tip(elem, "请输入整数", 2000, lay.position.top);
        }
    }, 4);
}
//删除
function Deletes(url) {
    var a = new Array();
    $("input[name='chk']").closest(".table").find('tbody > tr > td:first-child input:checkbox').each(function () {
        var that = $(this); if (that.is(":checked")) { a.push(that.attr("value")); }
    });
    if (a.length == 0) {
        lay.msg("请先选择数据项");
        return;
    }
    lay.confirm("您确定删除选中项", null, lay.icon.why, function () {
        ajaxpost(url, { ids: a.toString() });
    });
}
//审核
function Audits(url, status) {
    var a = new Array();
    $("input[name='chk']").closest(".table").find('tbody > tr > td:first-child input:checkbox').each(function () {
        var that = $(this); if (that.is(":checked")) { a.push(that.attr("value")); }
    });
    if (a.length == 0) {
        lay.msg("请先选择数据项");
        return;
    }
    lay.confirm("您确定审核选中项", null, lay.icon.why, function () {
        ajaxpost(url, { ids: a.toString(), status: status });
    });
}

//选中提交
function Sends(url, id, confirm) {
    var a = new Array();
    $("input[name='chk']").closest(".table").find('tbody > tr > td:first-child input:checkbox').each(function () {
        var that = $(this); if (that.is(":checked")) { a.push(that.attr("value")); }
    });
    if (a.length == 0) {
        lay.msg("请先选择数据项");
        return;
    }
    if (confirm) {
        lay.confirm("您确定提交选中项", null, lay.icon.why, function () {
            ajaxpost(url, { ids: a.toString(), id: id });
        });
    } else {
        ajaxpost(url, { ids: a.toString(), id: id });
    }
}





//2.批量操作项-----------------------------------------------end






//3.数据提交（公用）-----------------------------------------------start
function ajaxpost(url, data) {
    $.ajax({
        type: "post", data: data, dataType: "json", cache: false, url: url, success: function (data) {
            if (data) {
                if (data.code) {
                    if ($.trim(data.back) == "") {
                        lay.msg(data.msg);
                    } else {
                        var fun = { bind: eval("(" + data.back + ")") };
                        fun.bind();
                    }
                } else if (data.code == "-1") {

                }
                else {
                    if ($.trim(data.back) == "") {
                        lay.msg(data.msg);
                    } else {
                        var fun = { bind: eval("(" + data.back + ")") };
                        fun.bind();
                    }

                }
            }
        }, error: function (jqXHR, textStatus, errorThrown) {
            ///*弹出jqXHR对象的信息*/
            // alert(jqXHR.responseText);
            //alert(jqXHR.status);
            //alert(jqXHR.readyState);
            //alert(jqXHR.tatusText);
            ///*弹出其他两个参数的信息*/
            //alert(textStatus);
            //alert(errorThrown);

            lay.alert("操作失败,请检查是否关联其他数据或检查网络", null, null, function () {
                window.location.href = window.location.href;
            });
        }
    });
}


//3.数据提交（公用）-----------------------------------------------end


Date.prototype.format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}